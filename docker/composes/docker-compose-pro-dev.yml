name: featbit-pro-dev
version: "3"
services:
  ui:
    image: featbit/ui:dev
    container_name: ui
    build:
      context: ./modules/front-end
      dockerfile: ./Dockerfile
    environment:
      - API_URL=http://localhost:5000
      - DEMO_URL=http://localhost:5173
      - EVALUATION_URL=http://localhost:5100
    depends_on:
      - api-server
      - demo-dino-game-vue
    ports:
      - "8081:80"
    networks:
      - featbit-network

  api-server:
    image: featbit/api:dev
    container_name: api
    build:
      context: ./modules/back-end
      dockerfile: ./deploy/Dockerfile
    environment:
      - IS_PRO=true
      - SSOEnabled=false
    depends_on:
      mongodb:
        condition: service_started
      init-kafka-topics:
        condition: service_completed_successfully
      da-server:
        condition: service_started
    ports:
      - "5000:5000"
    networks:
      - featbit-network
  
  evaluation-server:
    image: featbit/evaluation-server:dev
    container_name: evaluation-server
    build:
      context: ./modules/evaluation-server
      dockerfile: ./deploy/Dockerfile
    environment:
      - IS_PRO=true
    depends_on:
      mongodb:
        condition: service_started
      init-kafka-topics:
        condition: service_completed_successfully
      redis:
        condition: service_started
    ports:
      - "5100:5100"
    networks:
      - featbit-network

  da-server:
    image: featbit/data-analytics-server:dev
    container_name: data-analytics-server
    build:
      context: ./modules/data-analytics
      dockerfile: ./Dockerfile
    depends_on:
      - kafka
      - clickhouse-server
    ports:
      - "8200:80"
    networks:
      - featbit-network
    environment:
      KAFKA_HOSTS: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CLICKHOUSE_HOST: clickhouse-server
      CLICKHOUSE_KAFKA_HOSTS: kafka:9092
      IS_PRO: true

  mongodb:
    image: mongo:5.0.14
    container_name: mongodb
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=featbit
    volumes:
      - mongodb:/data/db
      - ./infra/mongodb/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - featbit-network

  redis:
    image: bitnami/redis:6.2.10
    container_name: redis
    restart: on-failure
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - featbit-network
    ports:
      - "6379:6379"
    volumes:
      - redis:/bitnami/redis/data

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    restart: on-failure
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'true'
    networks:
      - featbit-network
    volumes:
      - kafka:/bitnami/kafka

  init-kafka-topics:
    image: bitnami/kafka:3.5
    depends_on:
      kafka:
        condition: service_started
    entrypoint:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        until /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9092; do sleep 5; done;
        echo "Kafka is ready now, start creating topics."
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-feature-flag-change;
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-segment-change;
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-endusers;
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-insights;
        echo "Seed kafka topic finished." 
    networks:
      - featbit-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=featbit-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - featbit-network

  clickhouse-server:
    image: clickhouse/clickhouse-server:23.7
    container_name: clickhouse-server
    restart: on-failure
    depends_on:
      - kafka
    ports:
      - "8123:8123"
      - "8443:8443"
      - "9000:9000"
      - "9009:9009"
      - "9440:9440"
      - "9181:9181"
    networks:
      - featbit-network
    volumes:
      - ./infra/clickhouse/single_node/config.xml:/etc/clickhouse-server/config.xml
      - ./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - clickhouse-server:/var/lib/clickhouse

  demo-dino-game-vue:
    image: featbit/demo-dino-game-vue:latest
    container_name: demo-dino-game-vue
    networks:
      - featbit-network
    ports:
      - "5173:80"

networks:
  featbit-network:
    name: featbit-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.1.0.0/16

volumes:
  mongodb:
  redis:
  kafka:
  clickhouse-server:
