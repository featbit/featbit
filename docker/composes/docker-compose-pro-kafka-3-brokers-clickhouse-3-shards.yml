version: "3.7"
name: featbit-pro-dev

x-clickhouse-defaults: &clickhouse-defaults
  restart: unless-stopped
  image: clickhouse/clickhouse-server:23.7
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144
  networks:
    - featbit-network

services:
  clickhouse-blue-1:
    <<: *clickhouse-defaults
    container_name: clickhouse-blue-1
    hostname: clickhouse-blue-1
    ports:
      - 9000:9000
      - 8123:8123
      - 9181:9181
    volumes:
      - type: volume
        source: ch-blue-1-data
        target: /var/lib/clickhouse
      - "./infra/clickhouse/shards/clickhouse-blue-1:/etc/clickhouse-server/config.d/"
      - "./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml"

  clickhouse-blue-2:
    <<: *clickhouse-defaults
    container_name: clickhouse-blue-2
    hostname: clickhouse-blue-2
    ports:
      - 9001:9000
      - 8124:8123
      - 9182:9181
    volumes:
      - type: volume
        source: ch-blue-2-data
        target: /var/lib/clickhouse
      - "./infra/clickhouse/shards/clickhouse-blue-2:/etc/clickhouse-server/config.d/"
      - "./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml"

  clickhouse-green-1:
    <<: *clickhouse-defaults
    container_name: clickhouse-green-1
    hostname: clickhouse-green-1
    ports:
      - 9002:9000
      - 8125:8123
      - 9183:9181
    volumes:
      - type: volume
        source: ch-green-1-data
        target: /var/lib/clickhouse
      - "./infra/clickhouse/shards/clickhouse-green-1:/etc/clickhouse-server/config.d/"
      - "./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml"

  clickhouse-green-2:
    <<: *clickhouse-defaults
    container_name: clickhouse-green-2
    hostname: clickhouse-green-2
    ports:
      - 9003:9000
      - 8126:8123
      - 9184:9181
    volumes:
      - type: volume
        source: ch-green-2-data
        target: /var/lib/clickhouse
      - "./infra/clickhouse/shards/clickhouse-green-2:/etc/clickhouse-server/config.d/"
      - "./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml"

  clickhouse-orange-1:
    <<: *clickhouse-defaults
    container_name: clickhouse-orange-1
    hostname: clickhouse-orange-1
    ports:
      - 9004:9000
      - 8127:8123
      - 9185:9181
    volumes:
      - type: volume
        source: ch-orange-1-data
        target: /var/lib/clickhouse
      - "./infra/clickhouse/shards/clickhouse-orange-1:/etc/clickhouse-server/config.d/"
      - "./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml"

  clickhouse-orange-2:
    <<: *clickhouse-defaults
    container_name: clickhouse-orange-2
    hostname: clickhouse-orange-2
    ports:
      - 9005:9000
      - 8128:8123
      - 9186:9181
    volumes:
      - type: volume
        source: ch-orange-2-data
        target: /var/lib/clickhouse
      - "./infra/clickhouse/shards/clickhouse-orange-2:/etc/clickhouse-server/config.d/"
      - "./infra/clickhouse/users.xml:/etc/clickhouse-server/users.xml"

  ui:
    image: featbit/ui:dev
    container_name: ui
    build:
      context: ./modules/front-end
      dockerfile: ./Dockerfile
    environment:
      - API_URL=http://localhost:5000
      - DEMO_URL=http://localhost:5173
      - EVALUATION_URL=http://localhost:5100
    depends_on:
      - api-server
      - demo-dino-game-vue
    ports:
      - "8081:80"
    networks:
      - featbit-network

  api-server:
    image: featbit/api:dev
    container_name: api
    build:
      context: ./modules/back-end
      dockerfile: ./deploy/Dockerfile
    environment:
      - MongoDb__ConnectionString=mongodb://admin:password@mongodb:27017
      - MongoDb__Database=featbit
      - Kafka__Producer__bootstrap.servers=kafka-2:9092
      - Kafka__Producer__sasl.username=kafka
      - Kafka__Producer__sasl.password=bitnami
      - Kafka__Producer__sasl.mechanism=PLAIN
      - Kafka__Producer__security.protocol=SASL_PLAINTEXT
      - Kafka__Consumer__bootstrap.servers=kafka-2:9092
      - Kafka__Consumer__sasl.username=kafka
      - Kafka__Consumer__sasl.password=bitnami
      - Kafka__Consumer__sasl.mechanism=PLAIN
      - Kafka__Consumer__security.protocol=SASL_PLAINTEXT
      - Redis__ConnectionString=redis:6379
      - OLAP__ServiceHost=http://da-server
      - IS_PRO=true
    depends_on:
      mongodb:
        condition: service_started
      init-kafka-topics:
        condition: service_completed_successfully
      da-server:
        condition: service_started
    ports:
      - "5000:5000"
    networks:
      - featbit-network
  
  evaluation-server:
    image: featbit/evaluation-server:dev
    container_name: evaluation-server
    build:
      context: ./modules/evaluation-server
      dockerfile: ./deploy/Dockerfile
    environment:
      - MongoDb__ConnectionString=mongodb://admin:password@mongodb:27017
      - MongoDb__Database=featbit
      - Kafka__Producer__bootstrap.servers=kafka-1:9092
      - Kafka__Producer__sasl.username=kafka
      - Kafka__Producer__sasl.password=bitnami
      - Kafka__Producer__sasl.mechanism=PLAIN
      - Kafka__Producer__security.protocol=SASL_PLAINTEXT
      - Kafka__Consumer__bootstrap.servers=kafka-1:9092
      - Kafka__Consumer__sasl.username=kafka
      - Kafka__Consumer__sasl.password=bitnami
      - Kafka__Consumer__sasl.mechanism=PLAIN
      - Kafka__Consumer__security.protocol=SASL_PLAINTEXT
      - Redis__ConnectionString=redis:6379
      - IS_PRO=true
    depends_on:
      mongodb:
        condition: service_started
      init-kafka-topics:
        condition: service_completed_successfully
      redis:
        condition: service_started
    ports:
      - "5100:5100"
    networks:
      - featbit-network

  da-server:
    image: featbit/data-analytics-server:dev
    container_name: data-analytics-server
    build:
      context: ./modules/data-analytics
      dockerfile: ./Dockerfile
    depends_on:
      init-kafka-topics:
        condition: service_completed_successfully
      clickhouse-blue-1:
        condition: service_started
      clickhouse-blue-2:
        condition: service_started
      clickhouse-green-1:
        condition: service_started
      clickhouse-green-2:
        condition: service_started
      clickhouse-orange-1:
        condition: service_started
      clickhouse-orange-2:
        condition: service_started
    ports:
      - "8200:80"
    networks:
      - featbit-network
    environment:
      KAFKA_HOSTS: kafka-0:9092
      KAFKA_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM: PLAIN
      KAFKA_SASL_USER: kafka
      KAFKA_SASL_PASSWORD: bitnami
      REDIS_URL: redis://redis:6379/0
      CLICKHOUSE_HOST: clickhouse-blue-1
      CLICKHOUSE_PORT: '9000'
      CLICKHOUSE_HTTP_PORT: '8123'
      CLICKHOUSE_ALT_HOST: clickhouse-green-1:9000,clickhouse-orange-1:9000
      CLICKHOUSE_KAFKA_HOSTS: kafka-0:9092
      IS_PRO: true

  mongodb:
    image: mongo:5.0.14
    container_name: mongodb
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=featbit
    volumes:
      - mongodb:/data/db
      - ./infra/mongodb/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - featbit-network

  redis:
    image: bitnami/redis:6.2.10
    container_name: redis
    restart: on-failure
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - featbit-network
    ports:
      - "6379:6379"
    volumes:
      - redis:/bitnami/redis/data

  kafka-0:
    image: bitnami/kafka:3.5
    container_name: kafka-0
    restart: on-failure
    ports:
      - '9092'
      - '29092:29092'
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:SASL_PLAINTEXT,PLAINTEXT_HOST:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT
      KAFKA_CLIENT_USERS: kafka
      KAFKA_CLIENT_PASSWORDS: bitnami
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CONTROLLER_USER: kafka
      KAFKA_CONTROLLER_PASSWORD: bitnami
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_USER: kafka
      KAFKA_INTER_BROKER_PASSWORD: bitnami
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - featbit-network
    volumes:
      - kafka_0_data:/bitnami/kafka
  
  kafka-1:
    image: bitnami/kafka:3.5
    container_name: kafka-1
    restart: on-failure
    ports:
      - '9092'
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT
      KAFKA_CLIENT_USERS: kafka
      KAFKA_CLIENT_PASSWORDS: bitnami
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CONTROLLER_USER: kafka
      KAFKA_CONTROLLER_PASSWORD: bitnami
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_USER: kafka
      KAFKA_INTER_BROKER_PASSWORD: bitnami
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - featbit-network
    volumes:
      - kafka_1_data:/bitnami/kafka
  
  kafka-2:
    image: bitnami/kafka:3.5
    container_name: kafka-2
    restart: on-failure
    ports:
      - '9092'
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT
      KAFKA_CLIENT_USERS: kafka
      KAFKA_CLIENT_PASSWORDS: bitnami
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CONTROLLER_USER: kafka
      KAFKA_CONTROLLER_PASSWORD: bitnami
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_USER: kafka
      KAFKA_INTER_BROKER_PASSWORD: bitnami
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - featbit-network
    volumes:
      - kafka_2_data:/bitnami/kafka
  

  init-kafka-topics:
    image: bitnami/kafka:3.5
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    entrypoint:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        until /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka-0:9092 --command-config /etc/kafka/config.properties; do sleep 5; done;
        echo "Kafka is ready now, start creating topics."
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-0:9092 --partitions 1 --replication-factor 2 --topic featbit-feature-flag-change --command-config /etc/kafka/config.properties;
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-0:9092 --partitions 1 --replication-factor 2 --topic featbit-segment-change --command-config /etc/kafka/config.properties;
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-0:9092 --partitions 1 --replication-factor 2 --topic featbit-endusers --command-config /etc/kafka/config.properties;
        /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-0:9092 --partitions 6 --replication-factor 2 --topic featbit-insights --command-config /etc/kafka/config.properties;
        echo "Seed kafka topic finished."
    volumes:
      - ./infra/kafka/config.properties:/etc/kafka/config.properties    
    networks:
      - featbit-network

  demo-dino-game-vue:
    image: featbit/demo-dino-game-vue:latest
    container_name: demo-dino-game-vue
    networks:
      - featbit-network
    ports:
      - "5173:80"

networks:
  featbit-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.1.0.0/16

volumes:
  mongodb:
  redis:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
  ch-blue-1-data:
  ch-blue-2-data:
  ch-green-1-data:
  ch-green-2-data:
  ch-orange-1-data:
  ch-orange-2-data:
