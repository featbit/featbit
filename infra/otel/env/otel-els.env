# Tells our app that the OpenTelemetry is enabled
ENABLE_OPENTELEMETRY=true

# OpenTelemetry .NET Automatic Instrumentation environment variables
# The following environment variables are the most commonly used ones
# For the full list of supported environment variables, please refer to the documentation at
# https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation/blob/main/docs/config.md
CORECLR_ENABLE_PROFILING="1"
CORECLR_PROFILER='{918728DD-259F-4A6A-AC2B-B85E1B658318}'
CORECLR_PROFILER_PATH="/app/linux-x64/OpenTelemetry.AutoInstrumentation.Native.so"
DOTNET_ADDITIONAL_DEPS="/app/AdditionalDeps"
DOTNET_SHARED_STORE="/app/store"
DOTNET_STARTUP_HOOKS="/app/net/OpenTelemetry.AutoInstrumentation.StartupHook.dll"
OTEL_DOTNET_AUTO_HOME="/app"

OTEL_SERVICE_NAME=featbit-els
OTEL_TRACES_EXPORTER=otlp
OTEL_METRICS_EXPORTER=otlp
OTEL_LOGS_EXPORTER=otlp
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317

# Uncomment the following lines to enable verbose logging of OpenTelemetry itself
# OTEL_LOG_LEVEL="debug"
# COREHOST_TRACE=1
# COREHOST_TRACEFILE=corehost_verbose_tracing.log

# Uncomment the following lines to enable console exporter for development
# OTEL_DOTNET_AUTO_LOGS_CONSOLE_EXPORTER_ENABLED="true"
# OTEL_DOTNET_AUTO_METRICS_CONSOLE_EXPORTER_ENABLED="true"
# OTEL_DOTNET_AUTO_TRACES_CONSOLE_EXPORTER_ENABLED="true"
