apiVersion: v1
kind: Pod
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  containers:
    - name: kafka
      image: bitnami/kafka:3.2.3
      ports:
        - containerPort: 9092
        - containerPort: 29092
      env:
        - name: BITNAMI_DEBUG
          value: "yes"
        - name: KAFKA_ENABLE_KRAFT
          value: "false"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "true"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_BROKER_ID
          value: "1001"
        - name: KAFKA_RESERVED_BROKER_MAX_ID
          value: "100001"
        - name: KAFKA_CFG_RESERVED_BROKER_MAX_ID
          value: "100001"
        - name: KAFKA_NODE_ID
          value: "1001"
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_NUM_PARTITIONS
          value: "1"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_CLEANUP_POLICY
          value: "compact"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper:2181
      resources: {}
      volumeMounts:
        - mountPath: /bitnami/kafka
          name: kafka
      lifecycle:
        postStart:
          exec:
            command:
            - bash
            - -c
            - |
              echo "Waiting for Kafka to be ready..."
              until /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9092; do sleep 5; done;
              echo "Kafka is ready now, start creating topics."
              /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-feature-flag-change;
              /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-segment-change;
              /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-endusers;
              /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic featbit-insights;
              echo "Seed kafka topic finished."
  restartPolicy: Always
  volumes:
    - name: kafka
      persistentVolumeClaim:
        claimName: kafka
