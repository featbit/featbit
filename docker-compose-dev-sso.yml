name: featbit-dev
version: "3"
services:
  ui:
    image: featbit/ui:dev
    container_name: ui
    build:
      context: ./modules/front-end
      dockerfile: ./Dockerfile
    environment:
      - API_URL=http://api.featbit.example
      - DEMO_URL=http://demo.featbit.example
      - EVALUATION_URL=http://eval.featbit.example
    depends_on:
      - api-server
      # - demo-dino-game-vue
    ports:
      - "8081:80"
    networks:
      - featbit-network

  api-server:
    image: featbit/api:dev
    container_name: api
    build:
      context: ./modules/back-end
      dockerfile: ./deploy/Dockerfile
    depends_on:
      - mongodb
      - redis
      - da-server
    ports:
      - "5000:5000"
    networks:
      - featbit-network
      # featbit-network:
      #   aliases:
      #     - api.featbit.example

  evaluation-server:
    image: featbit/evaluation-server:dev
    container_name: evaluation-server
    build:
      context: ./modules/evaluation-server
      dockerfile: ./deploy/Dockerfile
    depends_on:
      - mongodb
      - redis
    ports:
      - "5100:5100"
    networks:
      - featbit-network

  da-server:
    image: featbit/data-analytics-server:dev
    container_name: da-server
    build:
      context: ./modules/data-analytics
      dockerfile: ./Dockerfile
    depends_on:
      - mongodb
      - redis
    ports:
      - "8200:80"
    networks:
      - featbit-network
    environment:
      REDIS_URL: redis://redis:6379/0
      MONGO_URI: mongodb://admin:password@mongodb:27017
      MONGO_INITDB_DATABASE: featbit
      MONGO_HOST: mongodb
      CHECK_DB_LIVNESS: false

  demo-dino-game-vue:
    image: featbit/demo-dino-game-vue:latest
    container_name: demo-dino-game-vue
    networks:
      - featbit-network
    ports:
      - "5173:80"      

  mongodb:
    image: mongo:5.0.14
    container_name: mongodb
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=featbit
    volumes:
      - mongodb:/data/db
      - ./infra/mongodb/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - featbit-network

  redis:
    image: bitnami/redis:6.2.10
    container_name: redis
    restart: on-failure
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - featbit-network
    ports:
      - "6379:6379"
    volumes:
      - redis:/bitnami/redis/data

  postgresql:
    image: docker.io/bitnami/postgresql:latest
    # container_name: postgresql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    networks:
      - featbit-network
    volumes:
      - ./infra/postgresql/data:/bitnami/postgresql

  keycloak:
    image: docker.io/bitnami/keycloak:21.1.2-debian-11-r5
    container_name: keycloak
    ports:
      - "8083:8080"
      # - "8443:8443"
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN_USER="admin"
      - KEYCLOAK_ADMIN_PASSWORD="supersecret"
      - KEYCLOAK_ENABLE_HTTPS=false
      # - KEYCLOAK_DATABASE_HOST="postgresql"
      # - KEYCLOAK_DATABASE_PORT=5432
      # - KEYCLOAK_DATABASE_NAME="bitnami_keycloak"
      # - KEYCLOAK_DATABASE_USER="bn_keycloak"
      # - KEYCLOAK_DATABASE_SCHEMA="public"

    depends_on:
      - postgresql
    networks:
      - featbit-network
    # volumes:
    # - /path/to/init-scripts:/docker-entrypoint-initdb.d

  nginx:
    image: nginx:latest
    container_name: nginx-auth-agent-proxy
    ports:
      - "80:80"
      - "443:443"
    # network_mode: host
    networks:
      - featbit-network
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf 

  dnsmasq_out:
    image: featbit/dnsmasq_out:dev
    container_name: dnsmasq_out
    build:
      context: ./infra/dnsmasq
      dockerfile: ./Dockerfile
    ports:
    - 172.25.96.148:53:53
    - 172.25.96.148:53:53/udp
    command: dnsmasq -u root --no-daemon --log-queries --address=/.example/172.25.96.148
    networks:
      - featbit-network

  dnsmasq_in:
    image: featbit/dnsmasq_in:dev
    container_name: dnsmasq_in
    build: ./infra/dnsmasq
    networks:
      - featbit-network
    ports:
      - 172.25.96.148:5353:53
      - 172.25.96.148:5353:53/udp
    command: dnsmasq -u root --no-daemon --log-queries

networks:
    featbit-network:
      driver: bridge
      ipam:
        config:
          - subnet: 172.1.0.0/16

volumes:
  mongodb:
  redis:
