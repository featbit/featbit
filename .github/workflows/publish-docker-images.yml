name: Publish Docker Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Dockerhub image version (For example: 1.0.0)"
        required: true
      build-latest:
        description: "Build and publish the latest image?"
        type: boolean
        default: false
        required: false

env:
  LATEST_TAG: latest
  VERSION_TAG: ${{ github.event.inputs.version || github.ref_name }}
  APPS: |
    APP_UI: featbit-ui
    APP_API: featbit-api-server
    APP_DA: featbit-data-analytics-server
    APP_EVAL: featbit-evaluation-server

jobs:
  build-publish:
    name: Build and publish image to Docker Hub
    runs-on: ubuntu-latest
    environment: Production
    strategy:
      matrix:
        app: [${APPS}]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Dump GitHub context
        run: echo "${{ toJson(github) }}"

      - name: Build and push - ${{ matrix.app }} (current)
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:modules/${{ matrix.app }}"
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.app }}:${{ env.VERSION_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push - ${{ matrix.app }} (latest)
        if: github.event.inputs.build-latest
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:modules/${{ matrix.app }}"
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.app }}:${{ env.LATEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
